{"version":3,"sources":["meteor://ðŸ’»app/packages/socket-stream-client/server.js","meteor://ðŸ’»app/packages/socket-stream-client/node.js","meteor://ðŸ’»app/packages/socket-stream-client/common.js","meteor://ðŸ’»app/packages/socket-stream-client/urls.js"],"names":["module1","module","setMinimumBrowserVersions","link","v","chrome","edge","firefox","ie","mobileSafari","phantomjs","safari","electron","id","export","ClientStream","Meteor","toWebsocketUrl","StreamClientCommon","constructor","endpoint","options","client","headers","Object","create","npmFayeOptions","_initCommon","_launchConnection","send","data","currentStatus","connected","_changeUrl","url","_onConnect","Error","_forcedToDisconnect","close","_clearConnectionTimer","status","retryCount","statusChanged","forEachCallback","callback","_cleanup","maybeError","connectionTimer","clearTimeout","_getProxyUrl","targetUrl","proxy","process","env","HTTP_PROXY","http_proxy","match","HTTPS_PROXY","https_proxy","FayeWebSocket","Npm","require","deflate","fayeOptions","extensions","assign","proxyUrl","origin","subprotocols","Client","setTimeout","_lostConnection","ConnectionError","CONNECT_TIMEOUT","on","bindEnvironment","clientOnIfCurrent","event","description","args","error","_dontPrintErrors","_debug","message","Retry","forcedReconnectError","retry","name","eventCallbacks","push","cb","length","forEach","connectTimeoutMs","Package","tracker","statusListeners","Tracker","Dependency","changed","_retry","reconnect","_sockjsOptions","_force","clear","_retryNow","disconnect","_permanent","_error","reason","_retryLater","_online","timeout","retryLater","bind","retryTime","Date","getTime","depend","toSockjsUrl","translateUrl","newSchemeBase","subPath","startsWith","absoluteUrl","substr","ddpUrlMatch","httpUrlMatch","newScheme","urlAfterDDP","slashPos","indexOf","host","rest","replace","Math","floor","random","urlAfterHttp","_relativeToSiteRootUrl","endsWith"],"mappings":"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","file":"/packages/socket-stream-client.js","sourcesContent":["import {\r\n  setMinimumBrowserVersions,\r\n} from \"meteor/modern-browsers\";\r\n\r\nsetMinimumBrowserVersions({\r\n  chrome: 16,\r\n  edge: 12,\r\n  firefox: 11,\r\n  ie: 10,\r\n  mobileSafari: [6, 1],\r\n  phantomjs: 2,\r\n  safari: 7,\r\n  electron: [0, 20],\r\n}, module.id);\r\n","import { Meteor } from \"meteor/meteor\";\r\nimport { toWebsocketUrl } from \"./urls.js\";\r\nimport { StreamClientCommon } from \"./common.js\";\r\n\r\n// @param endpoint {String} URL to Meteor app\r\n//   \"http://subdomain.meteor.com/\" or \"/\" or\r\n//   \"ddp+sockjs://foo-**.meteor.com/sockjs\"\r\n//\r\n// We do some rewriting of the URL to eventually make it \"ws://\" or \"wss://\",\r\n// whatever was passed in.  At the very least, what Meteor.absoluteUrl() returns\r\n// us should work.\r\n//\r\n// We don't do any heartbeating. (The logic that did this in sockjs was removed,\r\n// because it used a built-in sockjs mechanism. We could do it with WebSocket\r\n// ping frames or with DDP-level messages.)\r\nexport class ClientStream extends StreamClientCommon {\r\n  constructor(endpoint, options) {\r\n    super(options);\r\n\r\n    this.client = null; // created in _launchConnection\r\n    this.endpoint = endpoint;\r\n\r\n    this.headers = this.options.headers || Object.create(null);\r\n    this.npmFayeOptions = this.options.npmFayeOptions || Object.create(null);\r\n\r\n    this._initCommon(this.options);\r\n\r\n    //// Kickoff!\r\n    this._launchConnection();\r\n  }\r\n\r\n  // data is a utf8 string. Data sent while not connected is dropped on\r\n  // the floor, and it is up the user of this API to retransmit lost\r\n  // messages on 'reset'\r\n  send(data) {\r\n    if (this.currentStatus.connected) {\r\n      this.client.send(data);\r\n    }\r\n  }\r\n\r\n  // Changes where this connection points\r\n  _changeUrl(url) {\r\n    this.endpoint = url;\r\n  }\r\n\r\n  _onConnect(client) {\r\n    if (client !== this.client) {\r\n      // This connection is not from the last call to _launchConnection.\r\n      // But _launchConnection calls _cleanup which closes previous connections.\r\n      // It's our belief that this stifles future 'open' events, but maybe\r\n      // we are wrong?\r\n      throw new Error('Got open from inactive client ' + !!this.client);\r\n    }\r\n\r\n    if (this._forcedToDisconnect) {\r\n      // We were asked to disconnect between trying to open the connection and\r\n      // actually opening it. Let's just pretend this never happened.\r\n      this.client.close();\r\n      this.client = null;\r\n      return;\r\n    }\r\n\r\n    if (this.currentStatus.connected) {\r\n      // We already have a connection. It must have been the case that we\r\n      // started two parallel connection attempts (because we wanted to\r\n      // 'reconnect now' on a hanging connection and we had no way to cancel the\r\n      // connection attempt.) But this shouldn't happen (similarly to the client\r\n      // !== this.client check above).\r\n      throw new Error('Two parallel connections?');\r\n    }\r\n\r\n    this._clearConnectionTimer();\r\n\r\n    // update status\r\n    this.currentStatus.status = 'connected';\r\n    this.currentStatus.connected = true;\r\n    this.currentStatus.retryCount = 0;\r\n    this.statusChanged();\r\n\r\n    // fire resets. This must come after status change so that clients\r\n    // can call send from within a reset callback.\r\n    this.forEachCallback('reset', callback => {\r\n      callback();\r\n    });\r\n  }\r\n\r\n  _cleanup(maybeError) {\r\n    this._clearConnectionTimer();\r\n    if (this.client) {\r\n      var client = this.client;\r\n      this.client = null;\r\n      client.close();\r\n\r\n      this.forEachCallback('disconnect', callback => {\r\n        callback(maybeError);\r\n      });\r\n    }\r\n  }\r\n\r\n  _clearConnectionTimer() {\r\n    if (this.connectionTimer) {\r\n      clearTimeout(this.connectionTimer);\r\n      this.connectionTimer = null;\r\n    }\r\n  }\r\n\r\n  _getProxyUrl(targetUrl) {\r\n    // Similar to code in tools/http-helpers.js.\r\n    var proxy = process.env.HTTP_PROXY || process.env.http_proxy || null;\r\n    // if we're going to a secure url, try the https_proxy env variable first.\r\n    if (targetUrl.match(/^wss:/)) {\r\n      proxy = process.env.HTTPS_PROXY || process.env.https_proxy || proxy;\r\n    }\r\n    return proxy;\r\n  }\r\n\r\n  _launchConnection() {\r\n    this._cleanup(); // cleanup the old socket, if there was one.\r\n\r\n    // Since server-to-server DDP is still an experimental feature, we only\r\n    // require the module if we actually create a server-to-server\r\n    // connection.\r\n    var FayeWebSocket = Npm.require('faye-websocket');\r\n    var deflate = Npm.require('permessage-deflate');\r\n\r\n    var targetUrl = toWebsocketUrl(this.endpoint);\r\n    var fayeOptions = {\r\n      headers: this.headers,\r\n      extensions: [deflate]\r\n    };\r\n    fayeOptions = Object.assign(fayeOptions, this.npmFayeOptions);\r\n    var proxyUrl = this._getProxyUrl(targetUrl);\r\n    if (proxyUrl) {\r\n      fayeOptions.proxy = { origin: proxyUrl };\r\n    }\r\n\r\n    // We would like to specify 'ddp' as the subprotocol here. The npm module we\r\n    // used to use as a client would fail the handshake if we ask for a\r\n    // subprotocol and the server doesn't send one back (and sockjs doesn't).\r\n    // Faye doesn't have that behavior; it's unclear from reading RFC 6455 if\r\n    // Faye is erroneous or not.  So for now, we don't specify protocols.\r\n    var subprotocols = [];\r\n\r\n    var client = (this.client = new FayeWebSocket.Client(\r\n      targetUrl,\r\n      subprotocols,\r\n      fayeOptions\r\n    ));\r\n\r\n    this._clearConnectionTimer();\r\n    this.connectionTimer = Meteor.setTimeout(() => {\r\n      this._lostConnection(new this.ConnectionError('DDP connection timed out'));\r\n    }, this.CONNECT_TIMEOUT);\r\n\r\n    this.client.on(\r\n      'open',\r\n      Meteor.bindEnvironment(() => {\r\n        return this._onConnect(client);\r\n      }, 'stream connect callback')\r\n    );\r\n\r\n    var clientOnIfCurrent = (event, description, callback) => {\r\n      this.client.on(\r\n        event,\r\n        Meteor.bindEnvironment((...args) => {\r\n          // Ignore events from any connection we've already cleaned up.\r\n          if (client !== this.client) return;\r\n          callback(...args);\r\n        }, description)\r\n      );\r\n    };\r\n\r\n    clientOnIfCurrent('error', 'stream error callback', error => {\r\n      if (!this.options._dontPrintErrors)\r\n        Meteor._debug('stream error', error.message);\r\n\r\n      // Faye's 'error' object is not a JS error (and among other things,\r\n      // doesn't stringify well). Convert it to one.\r\n      this._lostConnection(new this.ConnectionError(error.message));\r\n    });\r\n\r\n    clientOnIfCurrent('close', 'stream close callback', () => {\r\n      this._lostConnection();\r\n    });\r\n\r\n    clientOnIfCurrent('message', 'stream message callback', message => {\r\n      // Ignore binary frames, where message.data is a Buffer\r\n      if (typeof message.data !== 'string') return;\r\n\r\n      this.forEachCallback('message', callback => {\r\n        callback(message.data);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Retry } from 'meteor/retry';\r\n\r\nconst forcedReconnectError = new Error(\"forced reconnect\");\r\n\r\nexport class StreamClientCommon {\r\n  constructor(options) {\r\n    this.options = {\r\n      retry: true,\r\n      ...(options || null),\r\n    };\r\n\r\n    this.ConnectionError =\r\n      options && options.ConnectionError || Error;\r\n  }\r\n\r\n  // Register for callbacks.\r\n  on(name, callback) {\r\n    if (name !== 'message' && name !== 'reset' && name !== 'disconnect')\r\n      throw new Error('unknown event type: ' + name);\r\n\r\n    if (!this.eventCallbacks[name]) this.eventCallbacks[name] = [];\r\n    this.eventCallbacks[name].push(callback);\r\n  }\r\n\r\n  forEachCallback(name, cb) {\r\n    if (!this.eventCallbacks[name] || !this.eventCallbacks[name].length) {\r\n      return;\r\n    }\r\n\r\n    this.eventCallbacks[name].forEach(cb);\r\n  }\r\n\r\n  _initCommon(options) {\r\n    options = options || Object.create(null);\r\n\r\n    //// Constants\r\n\r\n    // how long to wait until we declare the connection attempt\r\n    // failed.\r\n    this.CONNECT_TIMEOUT = options.connectTimeoutMs || 10000;\r\n\r\n    this.eventCallbacks = Object.create(null); // name -> [callback]\r\n\r\n    this._forcedToDisconnect = false;\r\n\r\n    //// Reactive status\r\n    this.currentStatus = {\r\n      status: 'connecting',\r\n      connected: false,\r\n      retryCount: 0\r\n    };\r\n\r\n    if (Package.tracker) {\r\n      this.statusListeners = new Package.tracker.Tracker.Dependency();\r\n    }\r\n\r\n    this.statusChanged = () => {\r\n      if (this.statusListeners) {\r\n        this.statusListeners.changed();\r\n      }\r\n    };\r\n\r\n    //// Retry logic\r\n    this._retry = new Retry();\r\n    this.connectionTimer = null;\r\n  }\r\n\r\n  // Trigger a reconnect.\r\n  reconnect(options) {\r\n    options = options || Object.create(null);\r\n\r\n    if (options.url) {\r\n      this._changeUrl(options.url);\r\n    }\r\n\r\n    if (options._sockjsOptions) {\r\n      this.options._sockjsOptions = options._sockjsOptions;\r\n    }\r\n\r\n    if (this.currentStatus.connected) {\r\n      if (options._force || options.url) {\r\n        this._lostConnection(forcedReconnectError);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // if we're mid-connection, stop it.\r\n    if (this.currentStatus.status === 'connecting') {\r\n      // Pretend it's a clean close.\r\n      this._lostConnection();\r\n    }\r\n\r\n    this._retry.clear();\r\n    this.currentStatus.retryCount -= 1; // don't count manual retries\r\n    this._retryNow();\r\n  }\r\n\r\n  disconnect(options) {\r\n    options = options || Object.create(null);\r\n\r\n    // Failed is permanent. If we're failed, don't let people go back\r\n    // online by calling 'disconnect' then 'reconnect'.\r\n    if (this._forcedToDisconnect) return;\r\n\r\n    // If _permanent is set, permanently disconnect a stream. Once a stream\r\n    // is forced to disconnect, it can never reconnect. This is for\r\n    // error cases such as ddp version mismatch, where trying again\r\n    // won't fix the problem.\r\n    if (options._permanent) {\r\n      this._forcedToDisconnect = true;\r\n    }\r\n\r\n    this._cleanup();\r\n    this._retry.clear();\r\n\r\n    this.currentStatus = {\r\n      status: options._permanent ? 'failed' : 'offline',\r\n      connected: false,\r\n      retryCount: 0\r\n    };\r\n\r\n    if (options._permanent && options._error)\r\n      this.currentStatus.reason = options._error;\r\n\r\n    this.statusChanged();\r\n  }\r\n\r\n  // maybeError is set unless it's a clean protocol-level close.\r\n  _lostConnection(maybeError) {\r\n    this._cleanup(maybeError);\r\n    this._retryLater(maybeError); // sets status. no need to do it here.\r\n  }\r\n\r\n  // fired when we detect that we've gone online. try to reconnect\r\n  // immediately.\r\n  _online() {\r\n    // if we've requested to be offline by disconnecting, don't reconnect.\r\n    if (this.currentStatus.status != 'offline') this.reconnect();\r\n  }\r\n\r\n  _retryLater(maybeError) {\r\n    var timeout = 0;\r\n    if (this.options.retry ||\r\n        maybeError === forcedReconnectError) {\r\n      timeout = this._retry.retryLater(\r\n        this.currentStatus.retryCount,\r\n        this._retryNow.bind(this)\r\n      );\r\n      this.currentStatus.status = 'waiting';\r\n      this.currentStatus.retryTime = new Date().getTime() + timeout;\r\n    } else {\r\n      this.currentStatus.status = 'failed';\r\n      delete this.currentStatus.retryTime;\r\n    }\r\n\r\n    this.currentStatus.connected = false;\r\n    this.statusChanged();\r\n  }\r\n\r\n  _retryNow() {\r\n    if (this._forcedToDisconnect) return;\r\n\r\n    this.currentStatus.retryCount += 1;\r\n    this.currentStatus.status = 'connecting';\r\n    this.currentStatus.connected = false;\r\n    delete this.currentStatus.retryTime;\r\n    this.statusChanged();\r\n\r\n    this._launchConnection();\r\n  }\r\n\r\n  // Get current status. Reactive.\r\n  status() {\r\n    if (this.statusListeners) {\r\n      this.statusListeners.depend();\r\n    }\r\n    return this.currentStatus;\r\n  }\r\n}\r\n","// @param url {String} URL to Meteor app, eg:\r\n//   \"/\" or \"madewith.meteor.com\" or \"https://foo.meteor.com\"\r\n//   or \"ddp+sockjs://ddp--****-foo.meteor.com/sockjs\"\r\n// @returns {String} URL to the endpoint with the specific scheme and subPath, e.g.\r\n// for scheme \"http\" and subPath \"sockjs\"\r\n//   \"http://subdomain.meteor.com/sockjs\" or \"/sockjs\"\r\n//   or \"https://ddp--1234-foo.meteor.com/sockjs\"\r\nfunction translateUrl(url, newSchemeBase, subPath) {\r\n  if (!newSchemeBase) {\r\n    newSchemeBase = 'http';\r\n  }\r\n\r\n  if (subPath !== \"sockjs\" && url.startsWith(\"/\")) {\r\n    url = Meteor.absoluteUrl(url.substr(1));\r\n  }\r\n\r\n  var ddpUrlMatch = url.match(/^ddp(i?)\\+sockjs:\\/\\//);\r\n  var httpUrlMatch = url.match(/^http(s?):\\/\\//);\r\n  var newScheme;\r\n  if (ddpUrlMatch) {\r\n    // Remove scheme and split off the host.\r\n    var urlAfterDDP = url.substr(ddpUrlMatch[0].length);\r\n    newScheme = ddpUrlMatch[1] === 'i' ? newSchemeBase : newSchemeBase + 's';\r\n    var slashPos = urlAfterDDP.indexOf('/');\r\n    var host = slashPos === -1 ? urlAfterDDP : urlAfterDDP.substr(0, slashPos);\r\n    var rest = slashPos === -1 ? '' : urlAfterDDP.substr(slashPos);\r\n\r\n    // In the host (ONLY!), change '*' characters into random digits. This\r\n    // allows different stream connections to connect to different hostnames\r\n    // and avoid browser per-hostname connection limits.\r\n    host = host.replace(/\\*/g, () => Math.floor(Math.random() * 10));\r\n\r\n    return newScheme + '://' + host + rest;\r\n  } else if (httpUrlMatch) {\r\n    newScheme = !httpUrlMatch[1] ? newSchemeBase : newSchemeBase + 's';\r\n    var urlAfterHttp = url.substr(httpUrlMatch[0].length);\r\n    url = newScheme + '://' + urlAfterHttp;\r\n  }\r\n\r\n  // Prefix FQDNs but not relative URLs\r\n  if (url.indexOf('://') === -1 && !url.startsWith('/')) {\r\n    url = newSchemeBase + '://' + url;\r\n  }\r\n\r\n  // XXX This is not what we should be doing: if I have a site\r\n  // deployed at \"/foo\", then DDP.connect(\"/\") should actually connect\r\n  // to \"/\", not to \"/foo\". \"/\" is an absolute path. (Contrast: if\r\n  // deployed at \"/foo\", it would be reasonable for DDP.connect(\"bar\")\r\n  // to connect to \"/foo/bar\").\r\n  //\r\n  // We should make this properly honor absolute paths rather than\r\n  // forcing the path to be relative to the site root. Simultaneously,\r\n  // we should set DDP_DEFAULT_CONNECTION_URL to include the site\r\n  // root. See also client_convenience.js #RationalizingRelativeDDPURLs\r\n  url = Meteor._relativeToSiteRootUrl(url);\r\n\r\n  if (url.endsWith('/')) return url + subPath;\r\n  else return url + '/' + subPath;\r\n}\r\n\r\nexport function toSockjsUrl(url) {\r\n  return translateUrl(url, 'http', 'sockjs');\r\n}\r\n\r\nexport function toWebsocketUrl(url) {\r\n  return translateUrl(url, 'ws', 'websocket');\r\n}\r\n"]}