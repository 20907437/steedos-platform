{"version":3,"sources":["meteor://ðŸ’»app/packages/tmeasday:check-npm-versions/check-npm-versions.js"],"names":["module1","module","export","checkNpmVersions","semver","link","default","v","compatibleVersionIsInstalled","name","range","installedVersion","require","version","satisfies","e","message","toString","match","packages","packageName","Meteor","isDevelopment","failures","Object","keys","forEach","failure","length","errors","installed","requirement","push","qualifier","console","warn","join"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,MAAMA,OAAO,GAACC,MAAd;AAAqBD,OAAO,CAACE,MAAR,CAAe;AAACC,kBAAgB,EAAC,MAAIA;AAAtB,CAAf;AAAwD,IAAIC,MAAJ;AAAWJ,OAAO,CAACK,IAAR,CAAa,QAAb,EAAsB;AAACC,SAAO,CAACC,CAAD,EAAG;AAACH,UAAM,GAACG,CAAP;AAAS;;AAArB,CAAtB,EAA6C,CAA7C;;AAExF;AACA;AACA;AACA;AACA,MAAMC,4BAA4B,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpD,MAAI;AACF,UAAMC,gBAAgB,GAAGC,OAAO,CAAE,GAAEH,IAAK,eAAT,CAAP,CAAgCI,OAAzD;;AACA,QAAIT,MAAM,CAACU,SAAP,CAAiBH,gBAAjB,EAAmCD,KAAnC,CAAJ,EAA+C;AAC7C,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAOC,gBAAP;AACD;AACF,GAPD,CAOE,OAAOI,CAAP,EAAU;AACV;AACA,UAAMC,OAAO,GAAGD,CAAC,CAACE,QAAF,EAAhB,CAFU,CAGV;;AACA,QAAID,OAAO,CAACE,KAAR,CAAc,oBAAd,KAAuCF,OAAO,CAACE,KAAR,CAAc,uBAAd,CAA3C,EAAmF;AACjF,aAAO,KAAP;AACD,KAFD,MAEO;AACL,YAAMH,CAAN;AACD;AACF;AACF,CAlBD;;AAoBO,MAAMZ,gBAAgB,GAAG,CAACgB,QAAD,EAAWC,WAAX,KAA2B;AACzD,MAAI,CAACC,MAAM,CAACC,aAAZ,EAA2B;AACzB;AACD;;AACD,QAAMC,QAAQ,GAAG,EAAjB;AAEAC,QAAM,CAACC,IAAP,CAAYN,QAAZ,EAAsBO,OAAtB,CAA+BjB,IAAD,IAAU;AACtC,UAAMC,KAAK,GAAGS,QAAQ,CAACV,IAAD,CAAtB;AACA,UAAMkB,OAAO,GAAGnB,4BAA4B,CAACC,IAAD,EAAOC,KAAP,CAA5C;;AAEA,QAAIiB,OAAO,KAAK,IAAhB,EAAsB;AACpBJ,cAAQ,CAACd,IAAD,CAAR,GAAiBkB,OAAjB;AACD;AACF,GAPD;;AASA,MAAIH,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBK,MAAtB,KAAiC,CAArC,EAAwC;AACtC,WAAO,IAAP;AACD;;AAED,QAAMC,MAAM,GAAG,EAAf;AAEAL,QAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,OAAtB,CAA+BjB,IAAD,IAAU;AACtC,UAAMqB,SAAS,GAAGP,QAAQ,CAACd,IAAD,CAA1B;AACA,UAAMsB,WAAW,GAAI,GAAEtB,IAAK,IAAGU,QAAQ,CAACV,IAAD,CAAO,EAA9C;;AAEA,QAAIqB,SAAJ,EAAe;AACbD,YAAM,CAACG,IAAP,CAAa,MAAKvB,IAAK,IAAGqB,SAAU,eAAcC,WAAY,SAA9D;AACD,KAFD,MAEO;AACLF,YAAM,CAACG,IAAP,CAAa,MAAKvB,IAAK,IAAGU,QAAQ,CAACV,IAAD,CAAO,iBAAzC;AACD;AACF,GATD;AAWA,QAAMwB,SAAS,GAAGb,WAAW,GAAI,QAAOA,WAAY,IAAvB,GAA6B,EAA1D;AACAc,SAAO,CAACC,IAAR,CAAc,kCAAiCF,SAAU;EACzDJ,MAAM,CAACO,IAAP,CAAY,IAAZ,CAAkB;;;;CADlB;AAMD,CAvCM,C","file":"/packages/tmeasday_check-npm-versions.js","sourcesContent":["import semver from 'semver';\r\n\r\n// Returns:\r\n//   - true      if a version of the package in the range is installed\r\n//   - false     if no version is installed\r\n//   - version#  if incompatible version is installed\r\nconst compatibleVersionIsInstalled = (name, range) => {\r\n  try {\r\n    const installedVersion = require(`${name}/package.json`).version;\r\n    if (semver.satisfies(installedVersion, range)) {\r\n      return true;\r\n    } else {\r\n      return installedVersion;\r\n    }\r\n  } catch (e) {\r\n    // XXX add something to the tool to make this more reliable\r\n    const message = e.toString();\r\n    // One message comes out of the install npm package the other from npm directly\r\n    if (message.match(\"Cannot find module\") || message.match(\"Can't find npm module\")) {\r\n      return false;\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n};\r\n\r\nexport const checkNpmVersions = (packages, packageName) => {\r\n  if (!Meteor.isDevelopment) {\r\n    return;\r\n  }\r\n  const failures = {};\r\n\r\n  Object.keys(packages).forEach((name) => {\r\n    const range = packages[name];\r\n    const failure = compatibleVersionIsInstalled(name, range);\r\n\r\n    if (failure !== true) {\r\n      failures[name] = failure;\r\n    }\r\n  });\r\n\r\n  if (Object.keys(failures).length === 0) {\r\n    return true;\r\n  }\r\n\r\n  const errors = [];\r\n\r\n  Object.keys(failures).forEach((name) => {\r\n    const installed = failures[name];\r\n    const requirement = `${name}@${packages[name]}`;\r\n\r\n    if (installed) {\r\n      errors.push(` - ${name}@${installed} installed, ${requirement} needed`);\r\n    } else {\r\n      errors.push(` - ${name}@${packages[name]} not installed.`);\r\n    }\r\n  });\r\n\r\n  const qualifier = packageName ? `(for ${packageName}) ` : '';\r\n  console.warn(`WARNING: npm peer requirements ${qualifier}not installed:\r\n${errors.join('\\n')}\r\n\r\nRead more about installing npm peer dependencies:\r\n  http://guide.meteor.com/using-packages.html#peer-npm-dependencies\r\n`);\r\n};\r\n"]}